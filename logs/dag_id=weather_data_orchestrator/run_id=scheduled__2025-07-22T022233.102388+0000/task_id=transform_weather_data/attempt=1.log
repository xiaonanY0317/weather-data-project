{"timestamp":"2025-07-22T02:22:35.365548","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-22T02:22:35.365923","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/orchestrator.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-22T02:22:35.466332Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:22:35.466959Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:22:35.467279Z","level":"info","event":"Current task name:transform_weather_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:22:35.467514Z","level":"info","event":"Dag name:weather_data_orchestrator","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:22:35.490911","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-22T02:22:35.503161Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:22:35.506444Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:22:35.506854Z","level":"info","event":"Task operator:<Task(PythonOperator): transform_weather_data>","chan":"stdout","logger":"task"}
