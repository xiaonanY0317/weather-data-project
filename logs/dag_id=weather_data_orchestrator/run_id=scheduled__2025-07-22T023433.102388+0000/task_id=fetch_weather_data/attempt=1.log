{"timestamp":"2025-07-22T02:34:34.033921","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-22T02:34:34.034317","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/orchestrator.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-22T02:34:34.121326Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:34:34.121789Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:34:34.122110Z","level":"info","event":"Current task name:fetch_weather_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:34:34.122339Z","level":"info","event":"Dag name:weather_data_orchestrator","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:34:34.246315Z","level":"info","event":"Wearther data fetched successfully!","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:34:34.246460","level":"info","event":"Done. Returned value was: {'success': False, 'error': {'code': 101, 'type': 'missing_access_key', 'info': 'You have not supplied an API Access Key. [Required format: access_key=YOUR_ACCESS_KEY]'}}","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-22T02:34:34.246666","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01982ffb-9536-79f6-bdd7-a24d32516840'), task_id='fetch_weather_data', dag_id='weather_data_orchestrator', run_id='scheduled__2025-07-22T02:34:33.102388+00:00', try_number=1, map_index=-1, hostname='04f3c01a224f', context_carrier={}, task=<Task(PythonOperator): fetch_weather_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 22, 2, 34, 33, 720347, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/weather_data_orchestrator/runs/scheduled__2025-07-22T02%3A34%3A33.102388%2B00%3A00/tasks/fetch_weather_data?try_number=1')","logger":"task"}
{"timestamp":"2025-07-22T02:34:34.263063Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:34:34.263405Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:34:34.263811Z","level":"info","event":"Task operator:<Task(PythonOperator): fetch_weather_data>","chan":"stdout","logger":"task"}
