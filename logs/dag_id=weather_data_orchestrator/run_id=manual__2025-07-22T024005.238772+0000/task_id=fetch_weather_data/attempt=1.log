{"timestamp":"2025-07-22T02:40:06.340499","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-22T02:40:06.340886","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/orchestrator.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-22T02:40:06.509641Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:40:06.510095Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:40:06.510388Z","level":"info","event":"Current task name:fetch_weather_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:40:06.510651Z","level":"info","event":"Dag name:weather_data_orchestrator","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:40:06.582037Z","level":"info","event":"Wearther data fetched successfully!","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:40:06.590942Z","level":"info","event":"Raw data pushed to XCom.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:40:06.591344Z","level":"info","event":"{'success': False, 'error': {'code': 101, 'type': 'missing_access_key', 'info': 'You have not supplied an API Access Key. [Required format: access_key=YOUR_ACCESS_KEY]'}}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:40:06.591500","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-22T02:40:06.607351Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:40:06.607826Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-22T02:40:06.608160Z","level":"info","event":"Task operator:<Task(PythonOperator): fetch_weather_data>","chan":"stdout","logger":"task"}
